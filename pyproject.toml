
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sunvisor"
version = "1.0.1"
description = 'Compute when the sun is in your eyes at sunrise/sunset'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [{ name = "Marcos Huerta", email = "marcos@marcoshuerta.com" }]
classifiers = [
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',

    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",

    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "pandas",
    "astropy",
    "polars",
    "great_tables",
    "tqdm",
    "jplephem",
]

[project.urls]
Documentation = "https://github.com/astrowonk/sunvisor/#readme"
Issues = "https://github.com/astrowonk/sunvisor/issues"
Source = "https://github.com/astrowonk/sunvisor"


[tool.hatch.envs.default]
dependencies = ["pytest", "pytest-cov"]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src --cov=tests"
no-cov = "cov --no-cov"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311", "312"]

[tool.hatch.build.targets.sdist]
exclude = ["/.github"]

[tool.hatch.build.targets.wheel]
packages = ["src/sunvisor"]

exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 100

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = true
extend-select = [

    "PLE0101", # return-in-init
    "F706",    # return-outside-function
    "F704",    # yield-outside-function
    "PLE0116", # continue-in-finally
    "PLE0117", # nonlocal-without-binding
    "PLE0241", # duplicate-bases
    "PLE0302",
    "PLE0604", # invalid-all-object
    "PLE0605", # invalid-all-format
    "PLE0643", # potential-index-error
    "PLE0704", # misplaced-bare-raise
    "PLE1141", # dict-iter-missing-items
    "PLE1142", # await-outside-async
    "PLE1205", # logging-too-many-args
    "PLE1206", # logging-too-few-args
    "PLE1307", # bad-string-format-type
    "PLE1310", # bad-str-strip-call
    "PLE1507", # invalid-envvar-value
    "PLE1519", # singledispatch-method
    "PLE2510", # invalid-character-backspace
    "PLE2512", # invalid-character-sub
    "PLE2513", # invalid-character-esc
    "PLE2514", # invalid-character-nul
    "PLE2515", # invalid-character-zero-width-space
    "PLW0602", # global-variable-not-assigned
    "F841",    # unused-variable
    "PLW0711", # binary-op-exception
    "PLW1501", # bad-open-mode
    "D419",    # empty-docstring
    "FIX002",

]
ignore = [

    "E501",    # line-too-long
    "W291",    # trailing-whitespace
    "PLC0414", # useless-import-alias
    "PLC2401", # non-ascii-name
    "PLC2801", # unnecessary-dunder-call
    "PLC3002", # unnecessary-direct-lambda-call
    "PLR0124", # comparison-with-itself
    "PLR0202", # no-classmethod-decorator
    "PLR0203", # no-staticmethod-decorator
    "UP004",   # useless-object-inheritance
    "PLR0206", # property-with-parameters
    "PLR0904", # too-many-public-methods
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0914", # too-many-locals
    "PLR0915", # too-many-statements
    "PLR0916", # too-many-boolean-expressions
    "PLR1702", # too-many-nested-blocks
    "PLR1704", # redefined-argument-from-local
    "PLR1711", # useless-return
    "C416",    # unnecessary-comprehension
    "PLR1733", # unnecessary-dict-index-lookup
    "PLR1736", # unnecessary-list-index-lookup
    "PLW0108", # unnecessary-lambda
    "PLW0120", # useless-else-on-loop
    "PLW0127", # self-assigning-variable
    "PLW0128", # redeclared-assigned-name
    "PLW0129", # assert-on-string-literal
    "B033",    # duplicate-value
    "PLW0131", # named-expr-without-context
    "PLW0245", # super-without-brackets
    "PLW0406", # import-self
    "PLW0603", # global-statement
    "PLW0604", # global-at-module-level
    "F401",    # unused-import
    "E722",    # bare-except
    "PLW1508", # invalid-envvar-default
    "PLW1509", # subprocess-popen-preexec-fn
    "PLW1514", # unspecified-encoding
    "PLW2101", # useless-with-lock
    "PLW3301", # nested-min-max
]
